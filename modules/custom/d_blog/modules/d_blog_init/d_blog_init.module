<?php

/**
 * @file
 * Initialization of content for d_blog module.
 *
 * d_blog_init module.
 */

use \Drupal\taxonomy\Entity\Term;

/**
 * Alter content structure.
 * Implements hook_content_structure_alter()
 *
 * @param $structure
 *  The array with structure.
 *
 * @param $context
 *  Which structure array is this?
 */
function d_blog_init_content_structure_alter(&$structure, $context) {
  $path = drupal_get_path('module', 'd_blog_init') . '/pages';

  if ($context == 'all') {
    $structure['blog_post_1'] = ['file' => "$path/post_1.yml"];
    $structure['blog_post_2'] = ['file' => "$path/post_2.yml"];
    $structure['blog_post_3'] = ['file' => "$path/post_3.yml"];
    $structure['blog_post_4'] = ['file' => "$path/post_4.yml"];
    $structure['blog_post_5'] = ['file' => "$path/post_5.yml"];
  }
}

/**
 * Save node with paragraphs.
 * Blog specific properties.
 * Implements hook_init_node_alter()
 *
 * @param \Drupal\node\Entity\Node $node
 *  Node object.
 *
 * @param array $node_to_create
 *  Array node with paragraph content.
 *
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function d_blog_init_node_add_alter(&$node, $node_to_create) {
  if (isset($node_to_create['field_blog_sections']['paragraphs'])) {
    foreach ($node_to_create['field_blog_sections']['paragraphs'] as $paragraph_data) {
      $paragraph = d_content_init_fill_paragraph($paragraph_data);
      $node->field_blog_sections->appendItem($paragraph);
    }
  }

  if (isset($node_to_create['field_blog_teaser'])) {
    $node->field_blog_teaser->appendItem($node_to_create['field_blog_teaser']);
  }

  if (isset($node_to_create['field_blog_main_image'])) {
    $image = d_content_init_get_image($node_to_create['field_blog_main_image']);
    $node->field_blog_main_image->appendItem($image);
  }

  if (isset($node_to_create['field_blog_category'])) {
    $cat = $node_to_create['field_blog_category'];
    $terms = taxonomy_term_load_multiple_by_name($cat);

    // Create term and use it.
    if (empty($terms)) {
      $term = Term::create([
        'name' => $cat,
        'vid' => 'blog_posts_category',
      ]);

      $term->save();
      $terms = taxonomy_term_load_multiple_by_name($cat);

      foreach ($terms as $id => $term) {
        $node->field_blog_category->appendItem($id);
      }
    }
    else {
      foreach ($terms as $id => $term) {
        $node->field_blog_category->appendItem($term->id());
      }
    }
  }
}

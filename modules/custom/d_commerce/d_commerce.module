<?php

/**
 * @file
 * D_commerce module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\GeneratedLink;
use Drupal\Core\Url;

/**
 * Implements hook_theme().
 */
function d_commerce_theme($existing, $type, $theme, $path) {
  return [
    'commerce_checkout_order_summary' => [
      'template' => 'd_commerce-checkout-order-summary',
    ],
    'commerce_coupon_redemption_form' => [
      'template' => 'd_commerce-coupon-redemption-form',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function d_commerce_preprocess_commerce_cart_block(&$variables) {
  // Remove original cart icon.
  $variables['icon'] = NULL;

  // Regenerate cart link with button classes.
  $options = [
    'attributes' => ['class' => ['btn btn-primary']],
  ];
  $variables['links'] = [
    [
      '#type' => 'link',
      '#title' => t('Cart'),
      '#url' => Url::fromRoute('commerce_cart.page', [], $options),
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function d_commerce_form_commerce_checkout_flow_multistep_default_alter(&$form, &$form_state, $form_id) {
  if (
    isset($form['actions']['next']['#suffix']) &&
    $form['actions']['next']['#suffix'] instanceof GeneratedLink
  ) {
    $form['actions']['next']['#suffix']->setGeneratedLink(str_replace(
      'link--previous',
      'link--previous btn btn-light',
      $form['actions']['next']['#suffix']->getGeneratedLink()
    ));
  }
  if (
    isset($form['shipping_information']['recalculate_shipping']) ||
    isset($form['shipping_information']['shipping_profile']['edit_button'])
  ) {
    $form['shipping_information']['recalculate_shipping']['#attributes']['class'][] = 'btn btn-light mb-4';
    $form['shipping_information']['shipping_profile']['edit_button']['#attributes']['class'][] = 'btn btn-light';
  }
}

/**
 * Set d_customer role for created user.
 *
 * Implements hook_ENTITY_TYPE_insert().
 */
function d_commerce_user_insert(EntityInterface $entity) {
  $entity->addRole('d_customer');
  $entity->save();
}

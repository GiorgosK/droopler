<?php

/**
 * @file
 * Contains d_p_carousel module with Carousel Paragraph.
 */

/**
 * Implements hook_theme().
 */
function d_p_carousel_theme($existing, $type, $theme, $path)
{
  return [
    'paragraph__d_p_carousel' => [
      'base hook' => 'paragraph',
    ],
    'paragraph__d_p_carousel_item' => [
      'base hook' => 'paragraph',
    ],
    'field__field_d_p_cs_item_reference' => [
      'base hook' => 'field',
    ],
  ];
}

/**
 * Implements hook_preprocess_field().
 *
 * @param array $variables
 *  Template variables.
 */
function d_p_carousel_preprocess_field(&$variables) {
  if ($variables['element']['#entity_type'] == 'paragraph') {
    if ($variables['element']['#bundle'] == 'd_p_carousel') {
      if ($variables['field_name'] == 'field_d_p_cs_item_reference') {
        /**
         * @var \Drupal\paragraphs\Entity\Paragraph $paragraph
         */

        $paragraph = $variables['element']['#object'];
        $num_array = $paragraph->get('field_d_number')->getValue();
        $variables['column_classes'] = 'col-sm-4';
        if (!empty($num_array[0]['value'])) {

          // Always display one column with one element

          $columns = 1;

          $variables['column_classes'] = [
            'col-12'
          ];

          $id = $paragraph->id();
          $variables['#attached']['drupalSettings']['d_p_carousel'][$id] = [
            'columns' => $columns,
          ];
        }
      }
    }
  }
}


/**
 * Implements hook_preprocess_HOOK().
 *
 * @param array $variables
 *  Template variables.
 */
function d_p_carousel_preprocess_paragraph(&$variables)
{
  $paragraph = $variables['paragraph'];
  $bundle = $paragraph->bundle();

  switch ($bundle) {
    case 'd_p_carousel':
      $variables['#attached']['library'][] = 'd_p_carousel/slick';
      $variables['#attached']['library'][] = 'd_p_carousel/d_p_carousel';
      $variables['#attached']['drupalSettings']['d_p_carousel']['sm'] = 992;
      $variables['#attached']['drupalSettings']['d_p_carousel']['xs'] = 540;
      $variables['attributes']['data-id'][] = $variables['paragraph']->id();
      break;
    case 'd_p_carousel_item':
      /**
       * @var \Drupal\link\Plugin\Field\FieldType\LinkItem $link
       */
      $link = $paragraph->get('field_d_cta_link')->first();
      if (!is_null($link)) {
        $variables['has_link'] = true;
        $variables['attributes']['href'][] = $link->getUrl()->toString();
      }
      else {
        $variables['has_link'] = false;
      }
      break;
  }
}

/**
 * Implements hook_form_alter().
 */
function d_p_carousel_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  switch($form_id){
    case 'node_content_page_form':
      $form['field_page_section']['widget'][0]['subform']['field_d_p_cs_item_reference']['widget'][0]['subform']['field_d_image']['widget'][0]['#cardinality']= 1;
      break;
    case 'node_content_page_edit_form':

      $widget = $form['field_page_section']['widget'];
      $delta = range(0,$widget['#max_delta']);
      if(!empty($widget)) {
        foreach ($delta as $del) {
          if(isset($widget[$del]['subform']['field_d_p_cs_item_reference'])){
            $widget_sub = $widget[$del]['subform']['field_d_p_cs_item_reference']['widget'];
            $delta_sub = range(0, $widget_sub['#max_delta']);
            if (!empty($widget_sub)) {
              foreach ($delta_sub as $del_sub) {
                  unset($form['field_page_section']['widget'][$del]['subform']['field_d_p_cs_item_reference']['widget'][$del_sub]['subform']['field_d_image']['widget'][1]);
              }
            }
          }
        }
      }
      break;
  }
}


<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_entity_presave().
 */
function d_p_reference_content_entity_presave(EntityInterface $entity) {
  $type = $entity->bundle();
  switch ($type) {
    case 'd_p_reference_content':
      if ($entity instanceof Paragraph) {
        $reference_content = $entity
          ->get('field_d_p_reference_content');
        $values = $reference_content
          ->getValue();

        /** @var FieldConfig $def */
        $def = $reference_content
          ->getDataDefinition();
        $cardinality = $def
          ->getFieldStorageDefinition()
          ->getCardinality();

        // Get latest blog node nids.
        // Selected nodes are excluded from results.
        $auto_values = \Drupal::service('d_p_reference_content.get_content')
          ->getSortedContentByType('blog_post', 'created', 'DESC', $values);
        $merged_values = array_merge($values, $auto_values);

        // build an array with new values.
        $new_values = [];
        for ($i = 0; $i < $cardinality; $i++) {
          $new_values[] = $merged_values[$i];
        }

        $entity
          ->set('field_d_p_reference_content', $new_values);
        $entity
          ->setNewRevision(TRUE);
      }

      break;
  }
}
